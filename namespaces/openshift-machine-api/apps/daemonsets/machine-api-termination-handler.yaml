apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
    machine.openshift.io/owned: ""
    operator.openshift.io/spec-hash: 566a174465cc969cb4433db4b1f78e5815c4cb873025cb26309f46c23d0f568d
  creationTimestamp: "2023-03-08T11:46:22Z"
  generation: 1
  labels:
    api: clusterapi
    k8s-app: termination-handler
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:observedGeneration: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2023-03-08T11:46:22Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deprecated.daemonset.template.generation: {}
          f:machine.openshift.io/owned: {}
          f:operator.openshift.io/spec-hash: {}
        f:labels:
          .: {}
          f:api: {}
          f:k8s-app: {}
      f:spec:
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:operator.openshift.io/dep-openshift-machine-api.mao-trusted-ca.configmap: {}
              f:target.workload.openshift.io/management: {}
            f:labels:
              .: {}
              f:api: {}
              f:k8s-app: {}
          f:spec:
            f:automountServiceAccountToken: {}
            f:containers:
              k:{"name":"termination-handler"}:
                .: {}
                f:args: {}
                f:command: {}
                f:env:
                  .: {}
                  k:{"name":"KUBECONFIG"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"NODE_NAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/lib/kubelet/kubeconfig"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/lib/kubelet/pki"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
            f:dnsPolicy: {}
            f:hostNetwork: {}
            f:nodeSelector: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"kubeconfig"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"pki"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
        f:updateStrategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
    manager: machine-api-operator
    operation: Update
    time: "2023-03-08T11:46:22Z"
  name: machine-api-termination-handler
  namespace: openshift-machine-api
  resourceVersion: "8490"
  uid: 3b9b0f17-ce8e-4f7a-83cb-ad56edfede0e
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      api: clusterapi
      k8s-app: termination-handler
  template:
    metadata:
      annotations:
        operator.openshift.io/dep-openshift-machine-api.mao-trusted-ca.configmap: O1lK1A==
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        api: clusterapi
        k8s-app: termination-handler
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --logtostderr=true
        - --v=3
        - --node-name=$(NODE_NAME)
        - --namespace=openshift-machine-api
        - --poll-interval-seconds=5
        command:
        - /termination-handler
        env:
        - name: KUBECONFIG
          value: /var/lib/kubelet/kubeconfig
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:ec7b40bc7728833abc1d506d4fd98ae362d9ace4cad6ae6cf011eb0c5c474771
        imagePullPolicy: IfNotPresent
        name: termination-handler
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/kubelet/kubeconfig
          name: kubeconfig
          readOnly: true
        - mountPath: /var/lib/kubelet/pki
          name: pki
          readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        machine.openshift.io/interruptible-instance: ""
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: machine-api-termination-handler
      serviceAccountName: machine-api-termination-handler
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /var/lib/kubelet/kubeconfig
          type: ""
        name: kubeconfig
      - hostPath:
          path: /var/lib/kubelet/pki
          type: ""
        name: pki
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 10%
    type: RollingUpdate
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0
  observedGeneration: 1
