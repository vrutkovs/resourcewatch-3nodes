apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.17/23"],"mac_address":"0a:58:0a:82:00:11","gateway_ips":["10.130.0.1"],"ip_address":"10.130.0.17/23","gateway_ip":"10.130.0.1"}}'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.130.0.17"
          ],
          "mac": "0a:58:0a:82:00:11",
          "default": true,
          "dns": {}
      }]
    k8s.v1.cni.cncf.io/networks-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.130.0.17"
          ],
          "mac": "0a:58:0a:82:00:11",
          "default": true,
          "dns": {}
      }]
    openshift.io/scc: restricted-v2
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2023-03-08T11:41:25Z"
  generateName: ingress-operator-7479db4746-
  labels:
    name: ingress-operator
    pod-template-hash: 7479db4746
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:name: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"9dd9b2b4-7d05-48e0-acd1-e065ffee5640"}: {}
      f:spec:
        f:containers:
          k:{"name":"ingress-operator"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"CANARY_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELEASE_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"WATCH_NAMESPACE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
          k:{"name":"kube-rbac-proxy"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":9393,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/tls/private"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:runAsNonRoot: {}
          f:seccompProfile:
            .: {}
            f:type: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"bound-sa-token"}:
            .: {}
            f:name: {}
            f:projected:
              .: {}
              f:defaultMode: {}
              f:sources: {}
          k:{"name":"metrics-tls"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"trusted-ca"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-03-08T11:41:25Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          .: {}
          k:{"type":"PodScheduled"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-scheduler
    operation: Update
    subresource: status
    time: "2023-03-08T11:42:25Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: vrutkovs-mrmwt-master-0.c.openshift-gce-devel.internal
    operation: Update
    time: "2023-03-08T11:44:54Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.v1.cni.cncf.io/network-status: {}
          f:k8s.v1.cni.cncf.io/networks-status: {}
    manager: multus
    operation: Update
    subresource: status
    time: "2023-03-08T11:46:00Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.130.0.17"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2023-03-08T11:51:30Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"Ready"}:
            f:lastTransitionTime: {}
            f:status: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2023-03-08T11:54:20Z"
  name: ingress-operator-7479db4746-9h6ll
  namespace: openshift-ingress-operator
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: ingress-operator-7479db4746
    uid: 9dd9b2b4-7d05-48e0-acd1-e065ffee5640
  resourceVersion: "21540"
  uid: 39841c1d-6137-4a34-b24a-0aab2a04577e
spec:
  containers:
  - command:
    - ingress-operator
    - start
    - --namespace
    - $(WATCH_NAMESPACE)
    - --image
    - $(IMAGE)
    - --canary-image
    - $(CANARY_IMAGE)
    - --release-version
    - $(RELEASE_VERSION)
    env:
    - name: RELEASE_VERSION
      value: 4.12.0-0.okd-2023-03-04-063026
    - name: WATCH_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: IMAGE
      value: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:bfd14188641a2d34e5b2b2ed3336b3b440155533f3fd7c6de776300dc3ff9e3b
    - name: CANARY_IMAGE
      value: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:b79ae5b794a95f814a3454c300ec678169285167f9f117d1465f7ad8f4cb4806
    image: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:b79ae5b794a95f814a3454c300ec678169285167f9f117d1465f7ad8f4cb4806
    imagePullPolicy: IfNotPresent
    name: ingress-operator
    resources:
      requests:
        cpu: 10m
        memory: 56Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000130000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/pki/ca-trust/extracted/pem
      name: trusted-ca
      readOnly: true
    - mountPath: /var/run/secrets/openshift/serviceaccount
      name: bound-sa-token
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-jdzmt
      readOnly: true
  - args:
    - --logtostderr
    - --secure-listen-address=:9393
    - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
    - --upstream=http://127.0.0.1:60000/
    - --tls-cert-file=/etc/tls/private/tls.crt
    - --tls-private-key-file=/etc/tls/private/tls.key
    image: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:ff07afaff7fff38e3124162c5791ba969bcd750be02d5878f0387aed62517fa9
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy
    ports:
    - containerPort: 9393
      name: metrics
      protocol: TCP
    resources:
      requests:
        cpu: 10m
        memory: 40Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000130000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/tls/private
      name: metrics-tls
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-jdzmt
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: vrutkovs-mrmwt-master-2.c.openshift-gce-devel.internal
  nodeSelector:
    kubernetes.io/os: linux
    node-role.kubernetes.io/master: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000130000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c11,c10
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: ingress-operator
  serviceAccountName: ingress-operator
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 120
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 120
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: metrics-tls
    secret:
      defaultMode: 420
      secretName: metrics-tls
  - configMap:
      defaultMode: 420
      items:
      - key: ca-bundle.crt
        path: tls-ca-bundle.pem
      name: trusted-ca
    name: trusted-ca
  - name: bound-sa-token
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          audience: openshift
          expirationSeconds: 3600
          path: token
  - name: kube-api-access-jdzmt
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-08T11:44:54Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-03-08T11:54:20Z"
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-03-08T11:51:30Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-03-08T11:44:54Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://314a62f49cd0a3f0282e4dd6b05b7e3ac637d387aa363b4d525afecb445d1955
    image: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:b79ae5b794a95f814a3454c300ec678169285167f9f117d1465f7ad8f4cb4806
    imageID: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:b79ae5b794a95f814a3454c300ec678169285167f9f117d1465f7ad8f4cb4806
    lastState:
      terminated:
        containerID: cri-o://2fbb8b34033b57aaf4523df963832ec2345e4b92d0af16f2d342911209fa2384
        exitCode: 1
        finishedAt: "2023-03-08T11:51:15Z"
        message: "er\tcanary/namespace.go:28\tcreated canary namespace\t{\"namespace\":
          \"openshift-ingress-canary\"}\nI0308 11:51:06.440516       1 request.go:682]
          Waited for 1.04683119s due to client-side throttling, not priority and fairness,
          request: GET:https://172.30.0.1:443/apis/performance.openshift.io/v1alpha1?timeout=32s\n2023-03-08T11:51:07.593Z\tERROR\toperator.init.controller-runtime.source\twait/wait.go:235\tfailed
          to get informer from cache\t{\"error\": \"Timeout: failed waiting for *v1.Route
          Informer to sync\"}\n2023-03-08T11:51:07.611Z\tINFO\toperator.canary_controller\tcanary/daemonset.go:28\tcreated
          canary daemonset\t{\"namespace\": \"openshift-ingress-canary\", \"name\":
          \"ingress-canary\"}\n2023-03-08T11:51:07.628Z\tINFO\toperator.canary_controller\tcanary/service.go:25\tcreated
          canary service\t{\"namespace\": \"openshift-ingress-canary\", \"name\":
          \"ingress-canary\"}\n2023-03-08T11:51:15.714Z\tERROR\toperator.init\tcontroller/controller.go:273\tReconciler
          error\t{\"controller\": \"canary_controller\", \"object\": {\"name\":\"default\",\"namespace\":\"openshift-ingress-operator\"},
          \"namespace\": \"openshift-ingress-operator\", \"name\": \"default\", \"reconcileID\":
          \"8c1f058f-03a6-4609-9e4b-8613a9a13622\", \"error\": \"failed to ensure
          canary route: failed to create canary route openshift-ingress-canary/canary:
          timed out waiting for the condition\"}\n2023-03-08T11:51:15.714Z\tINFO\toperator.init\tmanager/runnable_group.go:219\tAll
          workers finished\t{\"controller\": \"canary_controller\"}\n2023-03-08T11:51:15.714Z\tINFO\toperator.init\truntime/asm_amd64.s:1594\tStopping
          and waiting for caches\n2023-03-08T11:51:15.714Z\tINFO\toperator.init\truntime/asm_amd64.s:1594\tStopping
          and waiting for webhooks\n2023-03-08T11:51:15.714Z\tINFO\toperator.init\truntime/asm_amd64.s:1594\tWait
          completed, proceeding to shutdown the manager\n2023-03-08T11:51:15.719Z\tERROR\toperator.main\tcobra/command.go:860\terror
          starting\t{\"error\": \"failed to wait for route_metrics_controller caches
          to sync: timed out waiting for cache to be synced\"}\n2023-03-08T11:51:15.719Z\tINFO\toperator.main\truntime/asm_amd64.s:1594\tfile
          watch events channel closed\n"
        reason: Error
        startedAt: "2023-03-08T11:48:43Z"
    name: ingress-operator
    ready: true
    restartCount: 2
    started: true
    state:
      running:
        startedAt: "2023-03-08T11:51:29Z"
  - containerID: cri-o://0a0f3b7985f941a6c6c206f9308c82cce46bb3d4ec7b275bb5edfe8464ac11e0
    image: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:ff07afaff7fff38e3124162c5791ba969bcd750be02d5878f0387aed62517fa9
    imageID: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:ff07afaff7fff38e3124162c5791ba969bcd750be02d5878f0387aed62517fa9
    lastState: {}
    name: kube-rbac-proxy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-03-08T11:46:22Z"
  hostIP: 10.0.0.3
  phase: Running
  podIP: 10.130.0.17
  podIPs:
  - ip: 10.130.0.17
  qosClass: Burstable
  startTime: "2023-03-08T11:44:54Z"
