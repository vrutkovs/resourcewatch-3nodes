apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/config.hash: adf48c00aa27c64eed61e6946513549f
    kubernetes.io/config.mirror: adf48c00aa27c64eed61e6946513549f
    kubernetes.io/config.seen: "2023-03-08T11:42:21.351143684Z"
    kubernetes.io/config.source: file
  creationTimestamp: "2023-03-08T11:43:39Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubernetes.io/config.hash: {}
          f:kubernetes.io/config.mirror: {}
          f:kubernetes.io/config.seen: {}
          f:kubernetes.io/config.source: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"68230a61-3998-42ae-824b-1cc75bc72bd7"}: {}
      f:spec:
        f:containers:
          k:{"name":"apiserver-watcher"}:
            .: {}
            f:args: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/rootfs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:hostPID: {}
        f:nodeName: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"rootfs"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
    manager: kubelet
    operation: Update
    time: "2023-03-08T11:43:39Z"
  name: apiserver-watcher-vrutkovs-mrmwt-master-2.c.openshift-gce-devel.internal
  namespace: openshift-kube-apiserver
  ownerReferences:
  - apiVersion: v1
    controller: true
    kind: Node
    name: vrutkovs-mrmwt-master-2.c.openshift-gce-devel.internal
    uid: 68230a61-3998-42ae-824b-1cc75bc72bd7
  resourceVersion: "3144"
  uid: 4332712c-2057-4d68-9b1a-29f6a132eb4d
spec:
  containers:
  - args:
    - run
    - --health-check-url=https://api-int.vrutkovs.origin-gce.dev.openshift.com:6443/readyz
    command:
    - flock
    - --verbose
    - --exclusive
    - --timeout=300
    - /rootfs/run/cloud-routes/apiserver-watcher.lock
    - apiserver-watcher
    image: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:a7cea4a88ef47288a649346deaa52a62f9d38c3df8a2c6e4e177b2fc039fef61
    imagePullPolicy: IfNotPresent
    name: apiserver-watcher
    resources:
      requests:
        cpu: 20m
        memory: 50Mi
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /rootfs
      name: rootfs
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  hostPID: true
  nodeName: vrutkovs-mrmwt-master-2.c.openshift-gce-devel.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  terminationGracePeriodSeconds: 30
  tolerations:
  - operator: Exists
  volumes:
  - hostPath:
      path: /
      type: ""
    name: rootfs
status:
  phase: Pending
  qosClass: Burstable
