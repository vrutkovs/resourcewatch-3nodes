apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/scc: restricted-v2
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2023-03-08T11:41:16Z"
  generateName: cloud-credential-operator-845b74b68f-
  labels:
    app: cloud-credential-operator
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
    pod-template-hash: 845b74b68f
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:control-plane: {}
          f:controller-tools.k8s.io: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"44aafb70-361e-4c85-9eff-46770218cc9d"}: {}
      f:spec:
        f:containers:
          k:{"name":"cloud-credential-operator"}:
            .: {}
            f:args: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"AWS_POD_IDENTITY_WEBHOOK_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELEASE_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"kube-rbac-proxy"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/tls/private"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:runAsNonRoot: {}
          f:seccompProfile:
            .: {}
            f:type: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"cco-trusted-ca"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
              f:optional: {}
            f:name: {}
          k:{"name":"cloud-credential-operator-serving-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-03-08T11:41:16Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          .: {}
          k:{"type":"PodScheduled"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-scheduler
    operation: Update
    subresource: status
    time: "2023-03-08T11:41:16Z"
  name: cloud-credential-operator-845b74b68f-dpvcr
  namespace: openshift-cloud-credential-operator
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: cloud-credential-operator-845b74b68f
    uid: 44aafb70-361e-4c85-9eff-46770218cc9d
  resourceVersion: "1659"
  uid: 7fbe6f17-e740-4bc7-b0dd-fef578cbc0d6
spec:
  containers:
  - args:
    - --secure-listen-address=0.0.0.0:8443
    - --upstream=http://127.0.0.1:2112/
    - --tls-cert-file=/etc/tls/private/tls.crt
    - --tls-private-key-file=/etc/tls/private/tls.key
    - --logtostderr=true
    image: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:ff07afaff7fff38e3124162c5791ba969bcd750be02d5878f0387aed62517fa9
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy
    ports:
    - containerPort: 8443
      name: metrics
      protocol: TCP
    resources:
      requests:
        cpu: 10m
        memory: 20Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000120000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/tls/private
      name: cloud-credential-operator-serving-cert
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n6rkr
      readOnly: true
  - args:
    - |
      if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
          echo "Copying system trust bundle"
          cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
      fi
      exec /usr/bin/cloud-credential-operator operator
    command:
    - /bin/bash
    - -ec
    env:
    - name: RELEASE_VERSION
      value: 4.12.0-0.okd-2023-03-04-063026
    - name: AWS_POD_IDENTITY_WEBHOOK_IMAGE
      value: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:16342d755793eee68a22163b7d5bd2fc6ab0948b5bc5f48b9495b2d897b19b6c
    image: registry.ci.openshift.org/origin/4.12-2023-03-04-063026@sha256:5884d754f300d0d01eb9646f69aecb070bff491880d4d7066c32f2e1ee884962
    imagePullPolicy: IfNotPresent
    name: cloud-credential-operator
    resources:
      requests:
        cpu: 10m
        memory: 150Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000120000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /var/run/configmaps/trusted-ca-bundle
      name: cco-trusted-ca
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n6rkr
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeSelector:
    node-role.kubernetes.io/master: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000120000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c11,c5
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: cloud-credential-operator
  serviceAccountName: cloud-credential-operator
  terminationGracePeriodSeconds: 10
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 120
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 120
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      items:
      - key: ca-bundle.crt
        path: tls-ca-bundle.pem
      name: cco-trusted-ca
      optional: true
    name: cco-trusted-ca
  - name: cloud-credential-operator-serving-cert
    secret:
      defaultMode: 420
      secretName: cloud-credential-operator-serving-cert
  - name: kube-api-access-n6rkr
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-08T11:41:16Z"
    message: no nodes available to schedule pods
    reason: Unschedulable
    status: "False"
    type: PodScheduled
  phase: Pending
  qosClass: Burstable
